#!/usr/bin/python3

# PURPOSE:  Transforms the output.json from sprite-bb.py so that the numberic
#           labels are replaced with human-readable names.
#
# USAGE:    You must pass the output from sprite-bb.py into this file and also supply the name
#           of your final output file (generated by this script) and the sprite manifest
#           csv file, which contains a look-up table for the human-readable names.
#
#           e.g.: ./map-vals.py output-from-sprite-bb.json output-transformed.json sprite-manifest.csv

import csv
import json
import argparse

prefix = "icon-" # This can be changed here, for now.

csvRows = []
jsonRows = []
transformedJsonObject = {}

def parseCsv(csvFile):
    with open(csvFile, 'r') as csvfile:
        csvreader = csv.reader(csvfile)
        for row in csvreader:
            csvRows.append(row)

def mapNameToIconId(inputFile, outputFile):
    totalCount = 0
    with open(inputFile, 'r') as file:
        jsonRows = json.loads(file.read())
        # Generate a new set of data using new keys:
        for manifestEntry in csvRows:
            # Get the human-readable name from the manifest entry.
            readableName = manifestEntry[0]
            # Get the index into the Sprite Sheet from the manifest entry.
            indexToSpriteSheet = manifestEntry[1]

            for key in jsonRows:
                # Get the number in the auto-generated icon id (e.g. "icon-1")
                iconNumber = key[5:] #"icon-" has five characters...

                # If the index from the manifest matches the number for this icon,
                # we've found the json for this sprite in the numbered contact sheet.
                try:
                    if (int(iconNumber) == int(indexToSpriteSheet)):
                        # Add a new entry to the final output using the human-readable name as a key:
                        transformedJsonObject[readableName] = jsonRows[key]
                        totalCount += 1
                except:
                    print("Failed to map the index for: " + readableName)

    print("Total count of sprite json entries created: " + str(totalCount))

    with open(outputFile, 'w') as file:
        json.dump(transformedJsonObject, file, indent=2)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('inputFile')
    parser.add_argument('outputFile', nargs = '?')
    parser.add_argument('csvFile')

    args = parser.parse_args()
    parseCsv(args.csvFile)
    mapNameToIconId(args.inputFile, args.outputFile)
